-----------------------------------------------------------------------------
-- Name:         Sonokia
-- Description:  Daughter of Sonokai anchestor of Monokai
-- License:      MIT
-----------------------------------------------------------------------------

-- luacheck: ignore 113
local lush = require('lush')
local hsl = lush.hsl

---@diagnostic disable
return lush(function()
  return {
    -- Base
    Bold({ gui = 'bold' }),
    Underlined({ gui = 'underline' }),
    Reversed({ gui = 'reverse' }),
    UnderlinedBold({ gui = 'underline,bold' }),
    White({ fg = hsl('#f1f1f2') }),
    Black({ fg = hsl('#18191B') }),
    Grey({ fg = hsl('#363944') }),
    DarkGrey({ fg = hsl('#2E2F33') }),
    LightGrey({ fg = hsl('#7f8490') }),
    Red({ fg = hsl('#fc5d7c') }),
    Orange({ fg = hsl('#f39660') }),
    Yellow({ fg = hsl('#e7c664') }),
    Green({ fg = hsl('#9ed072') }),
    Blue({ fg = hsl('#76cce0') }),
    Purple({ fg = hsl('#b39df3') }),
    WhiteBackground({ bg = White.fg }),
    BlackBackground({ bg = Black.fg }),
    GreyBackground({ bg = Grey.fg }),
    DarkGreyBackground({ bg = DarkGrey.fg }),
    LightGreyBackground({ bg = LightGrey.fg }),
    RedBackground({ bg = Red.fg }),
    OrangeBackground({ bg = Orange.fg }),
    YellowBackground({ bg = Yellow.fg }),
    GreenBackground({ bg = Green.fg }),
    BlueBackground({ bg = Blue.fg }),
    PurpleBackground({ bg = Purple.fg }),
    WhiteBackgroundContrast({ WhiteBackground, fg = Black.fg }),
    BlackBackgroundContrast({ BlackBackground, fg = White.fg }),
    GreyBackgroundContrast({ GreyBackground, fg = White.fg }),
    DarkGreyBackgroundContrast({ DarkGreyBackground, fg = White.fg }),
    LightGreyBackgroundContrast({ LightGreyBackground, fg = White.fg }),
    RedBackgroundContrast({ RedBackground, fg = Black.fg }),
    OrangeBackgroundContrast({ OrangeBackground, fg = Black.fg }),
    YellowBackgroundContrast({ YellowBackground, fg = Black.fg }),
    GreenBackgroundContrast({ GreenBackground, fg = Black.fg }),
    BlueBackgroundContrast({ BlueBackground, fg = Black.fg }),
    PurpleBackgroundContrast({ PurpleBackground, fg = Black.fg }),
    WhiteBold({ White, gui = 'bold' }),
    BlackBold({ Black, gui = 'bold' }),
    GreyBold({ Grey, gui = 'bold' }),
    DarkGreyBold({ DarkGrey, gui = 'bold' }),
    LightGreyBold({ LightGrey, gui = 'bold' }),
    RedBold({ Red, gui = 'bold' }),
    OrangeBold({ Orange, gui = 'bold' }),
    YellowBold({ Yellow, gui = 'bold' }),
    GreenBold({ Green, gui = 'bold' }),
    BlueBold({ Blue, gui = 'bold' }),
    PurpleBold({ Purple, gui = 'bold' }),
    WhiteItalic({ White, gui = 'italic' }),
    BlackItalic({ Black, gui = 'italic' }),
    GreyItalic({ Grey, gui = 'italic' }),
    DarkGreyItalic({ DarkGrey, gui = 'italic' }),
    LightGreyItalic({ LightGrey, gui = 'italic' }),
    RedItalic({ Red, gui = 'italic' }),
    OrangeItalic({ Orange, gui = 'italic' }),
    YellowItalic({ Yellow, gui = 'italic' }),
    GreenItalic({ Green, gui = 'italic' }),
    BlueItalic({ Blue, gui = 'italic' }),
    PurpleItalic({ Purple, gui = 'italic' }),
    WhiteUnderline({ White, gui = 'underline' }),
    BlackUnderline({ Black, gui = 'underline' }),
    GreyUnderline({ Grey, gui = 'underline' }),
    DarkGreyUnderline({ DarkGrey, gui = 'underline' }),
    LightGreyUnderline({ LightGrey, gui = 'underline' }),
    RedUnderline({ Red, gui = 'underline' }),
    OrangeUnderline({ Orange, gui = 'underline' }),
    YellowUnderline({ Yellow, gui = 'underline' }),
    GreenUnderline({ Green, gui = 'underline' }),
    BlueUnderline({ Blue, gui = 'underline' }),
    PurpleUnderline({ Purple, gui = 'underline' }),
    -- UI
    Normal({ fg = BlackBackgroundContrast.fg, bg = BlackBackgroundContrast.bg }),
    NormalNC({ Normal }),
    NormalFloat({ NormalNC }),
    FloatBorder({ BlueBold }),
    Terminal({ NormalFloat }),
    Folded({ GreyBold }),
    ToolbarLine({ NormalNC }),
    LineNr({ LightGrey }),
    SignColumn({ Grey }),
    FoldColumn({ GreyBold }),
    Search({ GreenBackgroundContrast, gui = 'bold', blend = 0 }),
    IncSearch({ BlueBackgroundContrast, gui = 'bold', blend = 0 }),
    Conceal({ Grey }),
    Cursor({ Reversed }),
    CursorColumn({ bg = DarkGreyBackground.bg }),
    ColorColumn({ CursorColumn }),
    CursorLine({ CursorColumn }),
    CursorLineNr({ White }),
    DiffAdd({ GreenBold }),
    DiffChange({ Blue }),
    DiffText({ DiffChange, gui = 'bold' }),
    DiffDelete({ Red }),
    Directory({ Green }),
    ErrorMsg({ RedBackgroundContrast, gui = 'bold,underline' }),
    WarningMsg({ OrangeBold }),
    ModeMsg({ WhiteBold }),
    MoreMsg({ BlueBold }),
    MatchParen({ gui = 'bold,underline' }),
    Whitespace({ fg = hsl('#414550') }),
    NonSpace({ Whitespace }),
    NonText({ Whitespace }),
    SpecialKey({ Whitespace }),
    Pmenu({ GreyBackgroundContrast }),
    PmenuSbar({ Pmenu }),
    PmenuSel({ GreenBackgroundContrast }),
    PmenuThumb({ GreyBackgroundContrast }),
    WildMenu({ PmenuSel }),
    Question({ Yellow }),
    SpellBad({ fg = Red.fg, gui = 'undercurl', guisp = '#00ff00' }),
    SpellCap({ GreenUnderline }),
    SpellLocal({ BlueUnderline }),
    SpellRare({ PurpleUnderline }),
    StatusLine({ DarkGreyBackgroundContrast }),
    StatusLineTerm({ StatusLine }),
    StatusLineNC({ StatusLine }),
    StatusLineTermNC({ StatusLineNC }),
    TabLine({ White, bg = RedBackground.bg }),
    TabLineFill({ StatusLineNC }),
    TabLineSel({ RedBackgroundContrast }),
    WinSeparator({ GreyBold }),
    Visual({ BlueBackgroundContrast }),
    VisualNOS({ RedBackgroundContrast }),
    QuickFixLine({ OrangeBackgroundContrast }),
    TermCursor({ Cursor }),
    -- Special
    Debug({ Yellow }),
    debugPC({ GreenBackground }),
    debugBreakpoint({ RedBackground }),
    ToolbarButton({ BlueBackground }),
    Substitute({ YellowBackground }),
    healthError({ Red }),
    healthSuccess({ Green }),
    healthWarning({ Yellow }),
    LspReferenceText({ Underlined }),
    LspReferenceRead({ Underlined }),
    LspReferenceWrite({ Reversed }),
    -- Syntax
    Type({ BlueItalic }),
    Structure({ BlueItalic }),
    StorageClass({ BlueItalic }),
    Identifier({ OrangeItalic }),
    Constant({ OrangeItalic }),
    PreProc({ Red }),
    PreCondit({ Red }),
    Include({ Red }),
    Keyword({ Red }),
    Define({ Red }),
    Typedef({ Red }),
    Exception({ Red }),
    Conditiona({ Red }),
    Repeat({ Red }),
    Statement({ Red }),
    Error({ Red }),
    Operator({ Red }),
    Macro({ Purple }),
    Label({ Purple }),
    Special({ Purple }),
    SpecialChar({ Purple }),
    Boolean({ Purple }),
    Number({ Purple }),
    Float({ Purple }),
    String({ Yellow }),
    Character({ Yellow }),
    Function({ Green }),
    Title({ OrangeBold }),
    Tag({ Orange }),
    Delimiter({ White }),
    Comment({ LightGreyItalic }),
    SpecialComment({ GreyBold }),
    Todo({ YellowBackgroundContrast }),
    Ignore({ Grey }),
    CurrentWord({ bg = hsl('#363944'), gui = 'bold,underline' }),
    -- Improve some built-in supported file-types that don't use tree sitter.
    -- Vim Script
    vimCommentTitle({ GreyBold }),
    vimLet({ Red }),
    vimFunction({ Green }),
    vimIsCommand({ White }),
    vimUserFunc({ Green }),
    vimFuncName({ Green }),
    vimMap({ Blue }),
    vimNotation({ Purple }),
    vimMapLhs({ Green }),
    vimMapRhs({ Green }),
    vimSetEqual({ Blue }),
    vimSetSep({ White }),
    vimOption({ Blue }),
    vimUserAttrbKey({ Blue }),
    vimUserAttrb({ Green }),
    vimAutoCmdSfxList({ Orange }),
    vimSynType({ Orange }),
    vimHiBang({ Orange }),
    -- vimSetSep {Grey},
    vimSet({ Blue }),
    -- Vim Help
    helpNote({ BlueBold }),
    helpHeadline({ PurpleBold }),
    helpHeader({ OrangeBold }),
    helpURL({ GreenUnderline }),
    helpHyperTextEntry({ BlueBold }),
    helpHyperTextJump({ Blue }),
    helpCommand({ Yellow }),
    helpExample({ Green }),
    helpSpecial({ Purple }),
    helpSectionDelim({ Grey }),
    -- Git Diff
    diffAdded({ Green }),
    diffRemoved({ Red }),
    diffChanged({ Blue }),
    diffOldFile({ Yellow }),
    diffNewFile({ Orange }),
    diffFile({ Purple }),
    diffLine({ Grey }),
    diffIndexLine({ Purple }),
    -- Makefile
    makeIdent({ Purple }),
    makeSpecTarget({ Blue }),
    makeTarget({ Orange }),
    gitcommitFile({ Green }),
  }
end)
